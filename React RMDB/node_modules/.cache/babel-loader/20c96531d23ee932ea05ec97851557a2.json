{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\Programare\\\\React JS\\\\React RMDB\\\\src\\\\components\\\\Movie\\\\Movie.js\";\nimport React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            // then fetch actors in the set state callback function\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                directors,\n                loading: false\n              }, () => {\n                localStorage;\n              });\n            });\n          });\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // Fetch the movie\n\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, this.state.movie ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      movie: this.props.location.movieName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MovieInfo, {\n      movie: this.state.movie,\n      directors: this.state.directors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MovieInfoBar, {\n      time: this.state.movie.runtime,\n      budget: this.state.movie.budget,\n      revenue: this.state.movie.revenue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })) : null, this.state.actors ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rmdb-movie-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FourColGrid, {\n      header: 'Actors',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, this.state.actors.map((element, i) => {\n      return /*#__PURE__*/React.createElement(Actor, {\n        key: i,\n        actor: element,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      });\n    }))) : null, !this.state.actors && !this.state.loading ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"No Movie Found\") : null, this.state.loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }) : null);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["E:/PROJECTS/Programare/React JS/React RMDB/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","result","json","status_code","setState","props","match","params","movieId","crew","filter","member","job","cast","localStorage","catch","error","console","componentDidMount","render","location","movieName","runtime","budget","revenue","map","element","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BU,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,OAAO,EAAE;AAJH,KADoB;;AAAA,SAkB5BC,UAlB4B,GAkBdC,QAAD,IAAc;AACzBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,MAAM,IAAIA,MAAM,CAACC,IAAP,EAA/B,EACCF,IADD,CACMC,MAAM,IAAI;AACd,YAAGA,MAAM,CAACE,WAAV,EACA;AACE,eAAKC,QAAL,CAAc;AACZR,YAAAA,OAAO,EAAE;AADG,WAAd;AAGD,SALD,MAOA;AACE,eAAKQ,QAAL,CAAc;AACZX,YAAAA,KAAK,EAAEQ;AADK,WAAd,EAEG,MAAM;AACP;AACA,kBAAMH,QAAQ,GAAI,GAAEf,OAAQ,SAAQ,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,oBAAmBxB,OAAQ,EAA/F;AACAe,YAAAA,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,MAAM,IAAIA,MAAM,CAACC,IAAP,EAA/B,EACCF,IADD,CACMC,MAAM,IAAI;AACd,oBAAMN,SAAS,GAAGM,MAAM,CAACQ,IAAP,CAAYC,MAAZ,CAAoBC,MAAD,IAAYA,MAAM,CAACC,GAAP,KAAe,UAA9C,CAAlB;AACA,mBAAKR,QAAL,CAAc;AACZV,gBAAAA,MAAM,EAAEO,MAAM,CAACY,IADH;AAEZlB,gBAAAA,SAFY;AAGZC,gBAAAA,OAAO,EAAE;AAHG,eAAd,EAIG,MAAM;AACPkB,gBAAAA,YAAY;AACb,eAND;AAOD,aAVD;AAWD,WAhBD;AAiBD;AACF,OA5BD,EA6BCC,KA7BD,CA6BOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CA7BhB;AA8BD,KAjD2B;AAAA;;AAQ5BE,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,QAAL,CAAc;AACZR,MAAAA,OAAO,EAAE;AADG,KAAd,EADkB,CAKlB;;AACA,UAAME,QAAQ,GAAI,GAAEf,OAAQ,SAAQ,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,YAAWxB,OAAQ,iBAAvF;AACA,SAAKa,UAAL,CAAgBC,QAAhB;AACD;;AAmCDqB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAK3B,KAAL,CAAWC,KAAX,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAI,KAAKY,KAAL,CAAWe,QAAX,CAAoBC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAI,KAAK7B,KAAL,CAAWC,KAA/B;AAAsC,MAAA,SAAS,EAAI,KAAKD,KAAL,CAAWG,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAI,KAAKH,KAAL,CAAWC,KAAX,CAAiB6B,OAAvC;AAAgD,MAAA,MAAM,EAAI,KAAK9B,KAAL,CAAWC,KAAX,CAAiB8B,MAA3E;AAAmF,MAAA,OAAO,EAAI,KAAK/B,KAAL,CAAWC,KAAX,CAAiB+B,OAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADA,GAOE,IATN,EAYI,KAAKhC,KAAL,CAAWE,MAAX,gBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAI,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKF,KAAL,CAAWE,MAAX,CAAkB+B,GAAlB,CAAsB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACpC,0BACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,CAAZ;AAAe,QAAA,KAAK,EAAID,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD,CAFJ,CADF,CADF,GAaE,IAzBN,EA4BI,CAAC,KAAKlC,KAAL,CAAWE,MAAZ,IAAsB,CAAC,KAAKF,KAAL,CAAWI,OAAlC,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,GAGE,IA/BN,EAkCI,KAAKJ,KAAL,CAAWI,OAAX,gBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAGE,IArCN,CADF;AA0CD;;AA9F2B;;AAiG9B,eAAeL,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\nimport Navigation from \"../elements/Navigation/Navigation\";\r\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport Actor from \"../elements/Actor/Actor\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Movie.css\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    // Fetch the movie\r\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint).then(result => result.json())\r\n    .then(result => {\r\n      if(result.status_code)\r\n      {\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      }\r\n      else\r\n      {\r\n        this.setState({\r\n          movie: result\r\n        }, () => {\r\n          // then fetch actors in the set state callback function\r\n          const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n          fetch(endpoint).then(result => result.json())\r\n          .then(result => {\r\n            const directors = result.crew.filter((member) => member.job === \"Director\");\r\n            this.setState({\r\n              actors: result.cast,\r\n              directors,\r\n              loading: false\r\n            }, () => {\r\n              localStorage\r\n            });\r\n          })\r\n        });\r\n      }\r\n    })\r\n    .catch(error => console.error(\"Error:\", error));\r\n  } \r\n\r\n  render() {\r\n    return(\r\n      <div className=\"rmdb-movie\">\r\n        {\r\n          this.state.movie ?\r\n          <div>\r\n            <Navigation movie = {this.props.location.movieName}/>\r\n            <MovieInfo movie = {this.state.movie} directors = {this.state.directors} />\r\n            <MovieInfoBar time = {this.state.movie.runtime} budget = {this.state.movie.budget} revenue = {this.state.movie.revenue} />\r\n          </div>\r\n          :\r\n            null\r\n        }\r\n        {\r\n          this.state.actors ?\r\n            <div className=\"rmdb-movie-grid\">\r\n              <FourColGrid header = {'Actors'}>\r\n                {\r\n                  this.state.actors.map((element, i) => {\r\n                    return(\r\n                      <Actor key={i} actor = {element} />\r\n                    );\r\n                  })\r\n                }\r\n              </FourColGrid>\r\n            </div>\r\n          :\r\n            null\r\n        }\r\n        {\r\n          !this.state.actors && !this.state.loading ?\r\n            <h1>No Movie Found</h1>\r\n          :\r\n            null\r\n        }\r\n        {\r\n          this.state.loading ?\r\n            <Spinner/>\r\n          :\r\n            null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}
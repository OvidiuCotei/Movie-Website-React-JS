{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\Programare\\\\React JS\\\\React RMDB\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroImage: null,\n      loading: false,\n      currentPage: 0,\n      totalPages: 0,\n      searchTerm: ''\n    };\n\n    this.searchItems = searchTerm => {\n      let endpoint = \"\";\n      this.setState({\n        movies: [],\n        loading: true,\n        searchTerm: searchTerm\n      });\n\n      if (searchTerm === \"\") {\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-USpage=1`;\n      } else {\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.loadMoreItems = () => {\n      let endpoint = \"\";\n      this.setState({\n        loading: true\n      });\n\n      if (this.state.searchTerm === \"\") {\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\n      } else {\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.fetchItems = async endpoint => {\n      const {\n        movies,\n        heroImage,\n        searchTerm\n      } = this.state;\n      const result = await await fetch(end);\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        this.setState({\n          movies: [...this.state.movies, ...result.results],\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        }, () => {\n          if (this.state.searchTerm === \"\") {\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('HomeState')) {\n      const state = JSON.parse(localStorage.getItem('HomeState'));\n      this.setState({ ...state\n      });\n    } else {\n      this.setState({\n        loading: true\n      });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-USpage=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  render() {\n    // ES6 destructuring the state\n    const {\n      movies,\n      heroImage,\n      loading,\n      currentPage,\n      totalPages,\n      searchTerm\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rmdb-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, heroImage ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HeroImage, {\n      image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}/${heroImage.backdrop_path}`,\n      title: heroImage.original_title,\n      text: heroImage.overview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      callback: this.searchItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rmdb-home-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FourColGrid, {\n      header: searchTerm ? 'Search Result' : 'Popular Movies',\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, movies.map((element, i) => {\n      return /*#__PURE__*/React.createElement(MovieThumb, {\n        key: i,\n        clickable: true,\n        image: element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}` : './images/no_image.jpg',\n        movieId: element.id,\n        movieName: element.original_title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      });\n    })), loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }) : null, currentPage <= totalPages && !loading ? /*#__PURE__*/React.createElement(LoadMoreBtn, {\n      text: \"Load More\",\n      onClick: this.loadMoreItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }) : null));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/PROJECTS/Programare/React JS/React RMDB/src/components/Home/Home.js"],"names":["React","Component","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","Home","state","movies","heroImage","loading","currentPage","totalPages","searchTerm","searchItems","endpoint","setState","fetchItems","loadMoreItems","result","fetch","end","then","json","results","page","total_pages","localStorage","setItem","JSON","stringify","componentDidMount","getItem","parse","render","backdrop_path","original_title","overview","map","element","i","poster_path","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\r\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(localStorage.getItem('HomeState'))\r\n    {\r\n      const state = JSON.parse(localStorage.getItem('HomeState'));\r\n      this.setState({\r\n        ...state\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n  \r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-USpage=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm: searchTerm\r\n    });\r\n\r\n    if(searchTerm === \"\")\r\n    {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-USpage=1`;\r\n    }\r\n    else\r\n    {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    if(this.state.searchTerm === \"\")\r\n    {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n    }\r\n    else\r\n    {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n    }\r\n\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = async endpoint => {\r\n    const {movies, heroImage, searchTerm} = this.state;\r\n\r\n    const result = await(await fetch(end))\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint).then(result => result.json())\r\n    .then(result => {\r\n      this.setState({\r\n        movies: [...this.state.movies, ...result.results],\r\n        heroImage: this.state.heroImage || result.results[0],\r\n        loading: false,\r\n        currentPage: result.page,\r\n        totalPages: result.total_pages\r\n      }, () => {\r\n        if(this.state.searchTerm === \"\")\r\n        {\r\n          localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n\trender() {\r\n    // ES6 destructuring the state\r\n    const {movies, heroImage, loading, currentPage, totalPages, searchTerm} = this.state;\r\n\r\n\t\treturn(\r\n      <div className=\"rmdb-home\">\r\n        {\r\n          heroImage ?\r\n            <div>\r\n              <HeroImage \r\n                image = {`${IMAGE_BASE_URL}${BACKDROP_SIZE}/${heroImage.backdrop_path}`}\r\n                title = {heroImage.original_title}\r\n                text = {heroImage.overview} \r\n              />\r\n              <SearchBar callback = {this.searchItems}/>\r\n            </div>\r\n          :\r\n            null\r\n        }\r\n        <div className=\"rmdb-home-grid\">\r\n          <FourColGrid \r\n            header = {searchTerm ? 'Search Result' : 'Popular Movies'}\r\n            loading = {loading}\r\n          >\r\n            {\r\n              movies.map((element, i) => {\r\n                return(\r\n                  <MovieThumb\r\n                    key={i}\r\n                    clickable = {true}\r\n                    image = {element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}` : './images/no_image.jpg'}\r\n                    movieId = {element.id}\r\n                    movieName = {element.original_title}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </FourColGrid>\r\n          {\r\n            loading ?\r\n              <Spinner/>\r\n            :\r\n              null\r\n          }\r\n          {\r\n            (currentPage <= totalPages && !loading) ?\r\n              <LoadMoreBtn text=\"Load More\" onClick = {this.loadMoreItems}/>\r\n            :\r\n              null\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n\t}\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
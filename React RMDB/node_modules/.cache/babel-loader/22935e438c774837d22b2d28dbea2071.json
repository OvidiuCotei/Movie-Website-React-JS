{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\Programare\\\\React JS\\\\React RMDB\\\\src\\\\components\\\\elements\\\\MovieInfo\\\\MovieInfo.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieInfo.css\";\n\nconst MovieInfo = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-movieinfo\",\n    style: {\n      background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}/${props.movie.backdrop_path}')` : '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-thumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MovieThumb, {\n    image: props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${props.movie.poster_path}` : './images/no-image.jpg',\n    clickable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-movie-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, props.movie.title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"PLOT\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, props.movie.overview), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"IMDB RATING\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rmdb-rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"100\",\n    optimum: \"100\",\n    low: \"40\",\n    high: \"70\",\n    value: props.movie.vote_average * 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"rmdb-score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, props.movie.vote_average)), props.directors.length > 1 ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"DIRECTORS\") : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"DIRECTOR\"), props.directors.map((element, i) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      className: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    });\n  }))));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["E:/PROJECTS/Programare/React JS/React RMDB/src/components/elements/MovieInfo/MovieInfo.js"],"names":["React","Link","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","FontAwesome","MovieThumb","MovieInfo","props","background","movie","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","element","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,aAAtC,QAA2D,iBAA3D;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AACE,IAAA,KAAK,EAAI;AACPC,MAAAA,UAAU,EAAED,KAAK,CAACE,KAAN,CAAYC,aAAZ,GAA6B,QAAOT,cAAe,GAAEE,aAAc,IAAGI,KAAK,CAACE,KAAN,CAAYC,aAAc,IAAhG,GAAsG;AAD3G,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAIH,KAAK,CAACE,KAAN,CAAYE,WAAZ,GAA2B,GAAEV,cAAe,GAAEC,WAAY,IAAGK,KAAK,CAACE,KAAN,CAAYE,WAAY,EAArF,GAAyF,uBADpG;AAEE,IAAA,SAAS,EAAI,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACE,KAAN,CAAYG,KAAjB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACE,KAAN,CAAYI,QAAhB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAC,GAAX;AAAe,IAAA,GAAG,EAAC,KAAnB;AAAyB,IAAA,OAAO,EAAC,KAAjC;AAAuC,IAAA,GAAG,EAAC,IAA3C;AAAgD,IAAA,IAAI,EAAC,IAArD;AAA0D,IAAA,KAAK,EAAEN,KAAK,CAACE,KAAN,CAAYK,YAAZ,GAA2B,EAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACE,KAAN,CAAYK,YAAvC,CAFF,CALF,EAUIP,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,gBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,EAgBIT,KAAK,CAACQ,SAAN,CAAgBE,GAAhB,CAAoB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAClC,wBACE;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAW,MAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,CAhBJ,CAPF,CALF,CADF;AAuCD,CAxCD;;AA0CA,eAAeb,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\r\nimport \"./MovieInfo.css\";\r\n\r\nconst MovieInfo = (props) => {\r\n  return(\r\n    <div className=\"rmdb-movieinfo\"\r\n      style = {{\r\n        background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}/${props.movie.backdrop_path}')` : '#000'\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image = {props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${props.movie.poster_path}` : './images/no-image.jpg'}\r\n            clickable = {false}\r\n          />\r\n        </div>\r\n        <div className=\"rmdb-movie-info-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n          </div>\r\n          {\r\n            props.directors.length > 1 ?\r\n            <h3>DIRECTORS</h3>\r\n            :\r\n            <h3>DIRECTOR</h3>\r\n          }\r\n          {\r\n            props.directors.map((element, i) => {\r\n              return(\r\n                <p key={i} className></p>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;"]},"metadata":{},"sourceType":"module"}